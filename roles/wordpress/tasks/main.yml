---

  # Database actions assume connection info in .my.cnf
  - name: create the wordpress database
    mysql_db: name={{ wordpress_db_name }} state=present

  - name: create Wordpress database credentials
    mysql_user: name={{ wordpress_db_user | default('wordpress') }}
                priv=wordpress.*:ALL
                password={{ wordpress_db_pass }}

  - name: create the wordpress directories
    file: path={{ item }}
          state=directory
          owner=webmaster
          group=webmaster
          mode=0755
    with_items:
      - "{{ wordpress_home }}"
      - "{{ wordpress_home }}/bin"
      - "{{ wordpress_home }}/plugins"
      - "{{ wordpress_home }}/media/themes"
      - "{{ wordpress_home }}/wp{{ wordpress_version }}"

  - name: set permissions on wordpress wp-content directory
    # must be writable by web server
    file: path={{ wordpress_home }}/media
          state=directory
          owner=webmaster
          group=www-data
          mode=0775

  - name: generate secret keys for Wordpress config
    get_url:  url=https://api.wordpress.org/secret-key/1.1/salt/
              dest={{ wordpress_home }}/wp-secret-keys.php
              owner=webmaster
              group=www-data
              mode=0640
  - name: open php tag in secret keys config
    lineinfile: dest={{ wordpress_home }}/wp-secret-keys.php
                insertbefore=BOF
                line="<?php"
  - name: close php tag in secret keys config
    lineinfile: dest={{ wordpress_home }}/wp-secret-keys.php
                insertafter=EOF
                line="?>"

  - name: install wp-config template
    # Note that wp-config should be installed BEFORE installing the Wordpress
    # archive, to prevent a brief window of security vulnerability.
    template: src=wp-config.php.j2
              dest={{ wordpress_home }}/wp-config.php
              owner=webmaster
              group=www-data
              mode=0640

  - name: install htpasswd file for wordpress
    # Store outside the docroot! Set up to be readable only by web server
    htpasswd: path={{ wordpress_home }}/htpasswd
              state=present
              name=webmaster
              password={{ webmaster_pass }}
              owner=webmaster
              group=www-data
              mode=0640

  - name: download wordpress archive
    sudo_user: webmaster
    get_url: url=https://downloads.wordpress.org/release/wordpress-{{ wordpress_version }}.tar.gz
             sha256sum={{ wordpress_sha256 }}
             dest={{ wordpress_home }}/wp{{ wordpress_version }}.tar.gz

  - name: extract the wordpress archive
    sudo_user: webmaster
    command:  tar -C {{ wordpress_home }}/wp{{ wordpress_version}} -xzf
              {{ wordpress_home }}/wp{{ wordpress_version}}.tar.gz --strip-components=1
              creates={{ wordpress_home }}/wp{{ wordpress_version}}/index.php

  - name: fix ownership of wordpress code files
    file: path={{ wordpress_home }}/wp{{ wordpress_version}}
          state=directory
          owner=webmaster
          group=webmaster
          mode="u=rwX,g=rX,o=rX"
          recurse=yes

  - name: force the code symlink to point to the newly installed wordpress
    file: path={{ wordpress_home }}/public_html
          state=link
          src={{ wordpress_home }}/wp{{ wordpress_version }}
          owner=webmaster
          group=webmaster

  - name: symlink wordpress themes into the content directory
    # If you don't do this, wordpress can't find its default themes.
    # NOTE: Use of wildcards requires use of ``shell`` vs ``command``.
    sudo_user: webmaster
    shell: ln -sf {{ wordpress_home }}/public_html/wp-content/themes/* {{ wordpress_home }}/media/themes/
          creates={{ wordpress_home }}/media/themes/index.php

  - name: download the wordpress CLI
    get_url: url=https://raw.github.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
             dest={{ wordpress_home }}/bin/wp
             owner=webmaster
             group=webmaster
             mode=0755

  - name: install the wordpress tables in the database
    # required for subsequent wp commands to work
    sudo_user: webmaster
    command: "{{ wordpress_home }}/bin/wp core install
              --url={{ wordpress_domain }}
              --title=Mindvessel
              --admin_user=TheBoss
              --admin_password={{ webmaster_pass }}
              --admin_email=editor@mindvessel.com
             chdir={{ wordpress_home }}/public_html"

  - name: install iThemes Security plugin
    sudo_user: webmaster
    command: "{{ wordpress_home }}/bin/wp plugin install better-wp-security
             chdir={{ wordpress_home }}/public_html
             creates={{ wordpress_home }}/plugins/better-wp-security"

  - name: install PressForward plugin
    sudo_user: webmaster
    command: "{{ wordpress_home }}/bin/wp plugin install pressforward
             chdir={{ wordpress_home }}/public_html
             creates={{ wordpress_home }}/plugins/pressforward"

  - name: install Jetpack plugin
    sudo_user: webmaster
    command: "{{ wordpress_home }}/bin/wp plugin install jetpack
             chdir={{ wordpress_home }}/public_html
             creates={{ wordpress_home }}/plugins/jetpack"

  - name: install apache vhost for wordpress
    notify: restart apache
    template: src=wordpress_vhost.j2
              dest=/etc/apache2/sites-available/wordpress.conf

  - name: enable the wordpress apache vhost
    notify: restart apache
    command: a2ensite wordpress
             creates=/etc/apache2/sites-enabled/wordpress.conf

  - name: set up the wp-cron schedule
    # Ansible crons default to every minute. Using the more verbose
    # action/args syntax because that command has too many funny characters.
    action: cron
    args:
      user: webmaster
      state: present
      name: wp-cron
      job: "curl -H'Host: {{wordpress_domain}}'
              'localhost/wp-cron.php?doing_wp_cron=1' > /dev/null"
